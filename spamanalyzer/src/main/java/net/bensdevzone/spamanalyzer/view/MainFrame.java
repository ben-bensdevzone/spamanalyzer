/* ==============================
Copyright (c) 2013 Benjamin Dahlmanns, ben@bensdevzone.net

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:
1. Redistributions of source code must retain the above copyright
   notice, this list of conditions and the following disclaimer.
2. Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in the
   documentation and/or other materials provided with the distribution.
3. The name of the author may not be used to endorse or promote products
   derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
============================== */
package net.bensdevzone.spamanalyzer.view;

import javax.swing.*;

import net.bensdevzone.spamanalyzer.control.InitializationException;
import net.bensdevzone.spamanalyzer.control.PluginLoader;
import net.bensdevzone.spamanalyzer.datatypes.CriteriaType;
import net.bensdevzone.spamanalyzer.datatypes.SearchCriteria;
import net.bensdevzone.spamanalyzer.plugin.AnalyzerPlugin;

import java.awt.*;


/**
 * Main Dialog of the application. The dialog was created using Netbeans 7.4. Some code was added
 * in order to handle user events.
 *
 * @author ben
 */
public class MainFrame extends javax.swing.JFrame {
    
    private PluginLoader loader;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSearch;
    private javax.swing.JComboBox cbPlugin;
    private javax.swing.JComboBox cbType;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField txtCriteria;
    private javax.swing.JTextArea txtDetails;
    // End of variables declaration//GEN-END:variables

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        loader = PluginLoader.getInstance();
        initComponents();
        initComboboxes();

        try {
            for(AnalyzerPlugin p : loader.getLoadedPlugins().values()) {
                cbPlugin.addItem(p);
            }
        } catch (InitializationException e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Error", 
                    JOptionPane.ERROR_MESSAGE);
            System.exit(0);
        }
    }

    private void initComboboxes() {
        cbPlugin.setModel(new DefaultComboBoxModel());
        cbPlugin.setRenderer(new PluginListCellRenderer());
        cbType.setModel(new DefaultComboBoxModel());
        cbType.setRenderer(new CriteriaTypeListCellRenderer());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtCriteria = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtDetails = new javax.swing.JTextArea();
        btnSearch = new javax.swing.JButton();
        cbType = new javax.swing.JComboBox();
        cbPlugin = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Spam Analyzer");

        txtCriteria.setName("txtCriteria"); // NOI18N

        txtDetails.setEditable(false);
        txtDetails.setColumns(20);
        txtDetails.setRows(5);
        txtDetails.setName("txtDetail"); // NOI18N
        jScrollPane2.setViewportView(txtDetails);

        btnSearch.setText("Search");
        btnSearch.setToolTipText("");
        btnSearch.setName("btnSearch"); // NOI18N
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        cbType.setName("cbType"); // NOI18N

        cbPlugin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbPluginActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbPlugin, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnSearch))
                    .addComponent(jScrollPane2)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(cbType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(txtCriteria, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbPlugin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCriteria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSearch)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbPluginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbPluginActionPerformed
        cbType.removeAllItems();
        for(CriteriaType t : ((AnalyzerPlugin)cbPlugin.getSelectedItem()).getCriteriaTypes()) {
            cbType.addItem(t);
        }

    }//GEN-LAST:event_cbPluginActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        SearchCriteria c = new SearchCriteria();
        c.setCriteriaType((CriteriaType) cbType.getSelectedItem());
        c.setKey(txtCriteria.getText());

        txtDetails.setText(((AnalyzerPlugin) cbPlugin.getSelectedItem())
                .searchFor(c).getDetails());
    }//GEN-LAST:event_btnSearchActionPerformed

}
